name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Cache pipx environments
      uses: actions/cache@v2
      with:
        path: |
          ~/.local/pipx
        key: ${{ runner.os }}-pipx-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipx-

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry using pipx
      run: |
        if ! command -v pipx &> /dev/null || ! pipx list | grep -q poetry
        then
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install poetry
        else
          echo "Poetry is already installed"
        fi

    - name: Install dependencies with Poetry
      run: poetry install

    - name: Lint with black
      run: poetry run black --check .

    - name: Test with pytest
      run: poetry run pytest
